<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codecool.Enigma</name>
    </assembly>
    <members>
        <member name="T:Codecool.Enigma.ArgsParser">
            <summary>
                Contains arguments for cipher objects
            </summary>
        </member>
        <member name="P:Codecool.Enigma.ArgsParser.Option">
            <summary>
                Gets option
            </summary>
        </member>
        <member name="P:Codecool.Enigma.ArgsParser.Cipher">
            <summary>
                Gets cipher name
            </summary>
        </member>
        <member name="P:Codecool.Enigma.ArgsParser.File">
            <summary>
                Gets file name
            </summary>
        </member>
        <member name="P:Codecool.Enigma.ArgsParser.Key">
            <summary>
                Gets key (for ciphers that require one)
            </summary>
        </member>
        <member name="M:Codecool.Enigma.ArgsParser.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Codecool.Enigma.ArgsParser"/> class.
                Creates a new ArgsParser object
            </summary>
            <param name="args">String arguments</param>
        </member>
        <member name="T:Codecool.Enigma.CipherFactory">
            <summary>
                CipherFactory static class - returns a proper cipher for given arguments
            </summary>
        </member>
        <member name="M:Codecool.Enigma.CipherFactory.IsCipherAvailable(System.String)">
            <summary>
                Checks whether there is a cipher of given name available
            </summary>
            <param name="cipherName">Cipher's name</param>
            <returns>Returns true is cipher is available</returns>
        </member>
        <member name="M:Codecool.Enigma.CipherFactory.GetCipherForArgs(Codecool.Enigma.ArgsParser)">
            <summary>
                Returns proper cipher instance for given arguments
            </summary>
            <param name="args">Cipher arguments</param>
            <returns>A cipher object</returns>
        </member>
        <member name="T:Codecool.Enigma.Enigma">
            <summary>
                Main Enigma logic class
            </summary>
        </member>
        <member name="M:Codecool.Enigma.Enigma.HandleArgs(Codecool.Enigma.ArgsParser)">
            <summary>
                Validates given ArgsParser instance and then invokes HandleCipherOperation
            </summary>
            <param name="argsParser">ArgsParser instance</param>
        </member>
        <member name="T:Codecool.Enigma.EnigmaException">
            <summary>
                Custom EnigmaException class
            </summary>
        </member>
        <member name="M:Codecool.Enigma.EnigmaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Codecool.Enigma.EnigmaException"/> class.
                Returns a new EnigmaException instance
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Codecool.Enigma.EnigmaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Codecool.Enigma.EnigmaException"/> class.
                Returns a new EnigmaException instance
            </summary>
            <param name="message">Message</param>
            <param name="innerException">InnerException</param>
        </member>
        <member name="T:Codecool.Enigma.ICipher">
            <summary>
                ICipher interface, which should be implemented in all cipher classes
            </summary>
        </member>
        <member name="M:Codecool.Enigma.ICipher.Encrypt(System.String)">
            <summary>
                Encrypts given message
            </summary>
            <param name="message">Message</param>
            <returns>Encrypted message</returns>
        </member>
        <member name="M:Codecool.Enigma.ICipher.Decrypt(System.String)">
            <summary>
                Decrypts given message
            </summary>
            <param name="message">Encrypted message</param>
            <returns>Decrypted message</returns>
        </member>
        <member name="T:Codecool.Enigma.MorseCode">
            <summary>
                Morse Code class
            </summary>
        </member>
        <member name="M:Codecool.Enigma.MorseCode.Encrypt(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Codecool.Enigma.MorseCode.Decrypt(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Codecool.Enigma.Program">
            <summary>
                Entry point class
            </summary>
        </member>
        <member name="M:Codecool.Enigma.Program.Main(System.String[])">
            <summary>
                Entry point method
            </summary>
            <param name="args">Command line arguments</param>
        </member>
        <member name="T:Codecool.Enigma.RailFence">
            <summary>
                RailFence cipher class
            </summary>
        </member>
        <member name="M:Codecool.Enigma.RailFence.Encrypt(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Codecool.Enigma.RailFence.Decrypt(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Codecool.Enigma.Rot13">
            <summary>
                Rot13 cipher class
            </summary>
        </member>
        <member name="M:Codecool.Enigma.Rot13.Encrypt(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Codecool.Enigma.Rot13.Decrypt(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
